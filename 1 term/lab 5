#include <stdio.h>
#include <stdlib.h>
#include <math.h>


typedef struct xy {float x,y;} xy;
const xy *oxy;

int pol_ang(const void *p1, const void *p2)
{
    float a;

    const xy *xy1 = p1;
    const xy *xy2 = p2;

    xy o_xy1 = { (*xy1).x - (*oxy).x, (*xy1).y - (*oxy).y  };
    xy o_xy2 = { (*xy2).x - (*oxy).x, (*xy2).y - (*oxy).y  };

    a = o_xy1.x * o_xy2.y - o_xy1.y * o_xy2.x;

    return (a>0) - (a<0);
}

float traverse_clockwise(float coord[],int n)
{
    int j = 0;
    float r=0;//сторона
    float per=0;//периметр
    float mas[50]={0};


    xy v[n];

    for (int i = 0; i < n*2-1; i+=2)
    {
        v[j].x = coord[i];
        j++;
    }

    for (int i = 1; i < n*2; i+=2)
    {
        v[j].y = coord[i];
        j++;
    }

    for (int i = 1; i < n*2; i++)
        if (v[i].y < v[0].y)
        {
            xy t = v[0];
            v[0] = v[i];
            v[i] = t;
        }

    oxy = &v[0];
    qsort(v, n, sizeof v[0], pol_ang);

    r = sqrt(pow(v[i+1].x - v[i].x, 2) + pow(v[i+1].y - v[i].y, 2));

    for (int i = 0; i < n; i++) {
        mas[i] = r;
        per=per+mas[i];
    }

    return per;

}


int main(int argc, char *argv[])
{

    float rect[] = {1,5,7,1,7,5,1,1};
    float star[] = {3.97, 0.82, 2.26, 3.69, 5.39, 2.16, 2.03, 2.11, 5.36, 4.06};
    float enneagon[] ={ 76, 67.1, -8.3, 18, 55, 93.3, 77, 33, 21.3, 99, -20, 50, -8.3, 82, 55, 6.7,  21.3, 0.76};
    printf("%f\n",traverse_clockwise(rect, 4));
    printf("%f\n",traverse_clockwise(star, 5));
    printf("%f\n",traverse_clockwise(enneagon, 9));

    return 0;

}
